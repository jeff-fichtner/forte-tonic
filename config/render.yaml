# Render Blueprint - Infrastructure as Code
# This file defines both staging and production environments
# Location: config/render.yaml
# 
# BUILD & DEPLOYMENT RESPONSIBILITY:
# - GitHub Actions: Code quality validation (tests, linting, formatting)
# - Render: Build and deployment (npm ci, npm start, hosting)
#
# To use this blueprint:
# 1. In Render dashboard, go to "Blueprints" 
# 2. Click "New Blueprint"
# 3. Connect your GitHub repository
# 4. Set blueprint file path: config/render.yaml
# 5. Render will create both services automatically

services:
  # Production Service
  - type: web
    name: tonic-production
    env: node
    plan: starter # or standard, pro based on your needs
    buildCommand: npm ci && npm run build:production
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: WORKING_SPREADSHEET_ID
        sync: false # Set manually in dashboard
      - key: GOOGLE_SERVICE_ACCOUNT_EMAIL
        sync: false # Set manually in dashboard  
      - key: GOOGLE_PRIVATE_KEY
        sync: false # Set manually in dashboard
    healthCheckPath: /api/health
    domains:
      - tonic.yourschool.edu # Replace with your actual domain
    branch: main
    rootDir: .
    scaling:
      minInstances: 1
      maxInstances: 3

  # Staging Service  
  - type: web
    name: tonic-staging
    env: node
    plan: starter
    buildCommand: npm ci && npm run build:staging
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: staging
      - key: WORKING_SPREADSHEET_ID
        sync: false # Set manually in dashboard
      - key: GOOGLE_SERVICE_ACCOUNT_EMAIL
        sync: false # Set manually in dashboard
      - key: GOOGLE_PRIVATE_KEY
        sync: false # Set manually in dashboard
    healthCheckPath: /api/health
    domains:
      - tonic-staging.yourschool.edu # Replace with your actual domain
    branch: dev
    rootDir: .
    scaling:
      minInstances: 1
      maxInstances: 2

# Optional: Add a database if you decide to use one later
# databases:
#   - name: tonic-postgres
#     plan: starter
#     databaseName: tonic_production
#     user: tonic_user
